/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.muffato.form;

import br.com.muffato.dao.SQLite;
import static br.com.muffato.form.EmailForm.getPathLog;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Address;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import jxl.Cell;
import jxl.CellType;
import jxl.DateCell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;

/**
 *
 * @author gomes_cb
 */
public class MainForm extends javax.swing.JFrame {

    private List<String> emails = new ArrayList<String>();
    private List<String> naoEnviados = new ArrayList<String>();
    private List<String> enviados = new ArrayList<String>();
    private Integer totalEmails = 0;
    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        SQLite.iniciarConfiguracoes();
        //Centraliza a tela
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        
        this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jFileChooser2 = new javax.swing.JFileChooser();
        jFileChooser3 = new javax.swing.JFileChooser();
        jFrame1 = new javax.swing.JFrame();
        txtFilePath = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPlanilha = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblTotais = new javax.swing.JLabel();
        btnEnviar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CONTROLE");

        txtFilePath.setToolTipText("Caminho do arquivo xls");

        jButton1.setText("Arquivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtPlanilha.setColumns(20);
        txtPlanilha.setRows(5);
        jScrollPane1.setViewportView(txtPlanilha);
        txtPlanilha.getAccessibleContext().setAccessibleName("txtPPlanilha");

        jLabel1.setText("Caminho do arquivo");

        jLabel2.setText("Lista de Emails");

        lblTotais.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTotais.setText("0/0");

        btnEnviar.setText("Enviar Próximo");
        btnEnviar.setActionCommand("");
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        jButton2.setText("Configurações");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("log");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtFilePath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 645, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTotais)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTotais))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(btnEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel2.getAccessibleContext().setAccessibleName("llblEmails");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.xls", "xls");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
           System.out.println("You chose to open this file: " + chooser.getSelectedFile().getName());
           System.out.println("You chose to open this file: " + chooser.getSelectedFile().getAbsolutePath());
            try {
                lerPlanilha(chooser.getSelectedFile().getAbsolutePath());
            } catch (IOException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (BiffException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Formato de arquivo deve ser .xls", "ERRO", JOptionPane.ERROR_MESSAGE );
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        if (emails != null && emails.size() > 0) {
            EmailForm frame = new EmailForm(emails);
            //frame.getContentPane().add(new EmailForm().getComponent());
            frame.setDefaultCloseOperation(jFrame1.HIDE_ON_CLOSE);
            frame.pack();
            frame.setLocationRelativeTo(null);
            frame.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Não existe planilha lida para envio de email", "ERRO", JOptionPane.ERROR_MESSAGE );
        }
    }//GEN-LAST:event_btnEnviarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
      ConfiguracaoForm frame = new ConfiguracaoForm();
      //frame.getContentPane().add(new EmailForm().getComponent());
      frame.setDefaultCloseOperation(jFrame1.HIDE_ON_CLOSE);
      frame.pack();
      frame.setLocationRelativeTo(null);
      frame.carregarConfiguracoes();
      frame.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
      LogForm frame = new LogForm();
      //frame.getContentPane().add(new EmailForm().getComponent());
      frame.setDefaultCloseOperation(jFrame1.HIDE_ON_CLOSE);
      frame.pack();
      frame.setLocationRelativeTo(null);
      frame.setVisible(true);
    }//GEN-LAST:event_jLabel3MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnviar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFileChooser jFileChooser2;
    private javax.swing.JFileChooser jFileChooser3;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTotais;
    private javax.swing.JTextField txtFilePath;
    private javax.swing.JTextArea txtPlanilha;
    // End of variables declaration//GEN-END:variables
    
    private void lerPlanilha(String filePath) throws IOException, BiffException {
        txtPlanilha.setText("");
        emails = new ArrayList<String>();
        txtFilePath.setText(filePath);
        Workbook workbook = Workbook.getWorkbook(new File(filePath));
        System.out.println("Iniciando a leitura da planilha XLS:");
        Sheet sheet;
        int linhas;
        int cells;
        int counter = 0;
        //Lendo segunda planilha
        try {
            sheet = workbook.getSheet(0);
            linhas = sheet.getRows();
            
            for(int i = 3; i < linhas; i++){
                counter++;
                Cell a1 = sheet.getCell(0, i);
                Cell a2 = sheet.getCell(1, i);
                Cell a3 = sheet.getCell(2, i);
                Cell a4 = sheet.getCell(3, i);
                Cell a5 = sheet.getCell(4, i);
                Cell a6 = sheet.getCell(5, i);
                Cell a7 = sheet.getCell(6, i);
                Cell a8 = sheet.getCell(7, i);
                Cell a9 = sheet.getCell(8, i);
                Cell a10 = sheet.getCell(9, i);
                Cell a11 = sheet.getCell(10, i);
                Cell a12 = sheet.getCell(11, i);
                Cell a13 = sheet.getCell(12, i);

                String a1content = a1.getContents();
                if (a1content != null && !a1content.isEmpty()) {
                    String as1 = getContents(a1);
                    String as2 =  getContents(a2);
                    String as3 =  getContents(a3);
                    String as4 =  getContents(a4);
                    String as5 =  getContents(a5);
                    String as6 =  getContents(a6);
                    String as7 =  getContents(a7);
                    String as8 =  getContents(a8);
                    String as9 = getContents(a9);
                    String as10 =  getContents(a10);
                    String as11 =  getContents(a11);
                    String as12 =  getContents(a12);
                    String as13 =  getContents(a13);

                    String txtLinha = 
                            + (counter) + ";"
                            + as1 + ";" + as2 + ";" + as3 + ";"
                            + as4 + ";" + as5 + ";" + as6 + ";" 
                            + as7 + ";" + as8 + ";" + as9 + ";" 
                            + as10 + ";" + as11 + ";" + as12 + ";" 
                            + as13 + ";\n";
                    txtPlanilha.setText(txtPlanilha.getText().toString() + txtLinha);
                    emails.add(txtLinha);
                    naoEnviados = emails;
                    totalEmails = emails.size();
                } else {
                    System.out.println("Quebrou");
                    break;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro na leitura da primeira planilha", "ERRO", JOptionPane.ERROR );
        }
        
        //Lendo segunda planilha
        try {
            sheet = workbook.getSheet(1);
            linhas = sheet.getRows();
            for(int i = 0; i < linhas; i++){
                Cell a1 = sheet.getCell(0, i);
                String as1 = a1.getContents();
                System.out.println("Coluna 1: " + as1);

            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro na leitura da segunda planilha", "ERRO", JOptionPane.ERROR);
        }
       
        System.out.println("Fim da leitura da planilha XLS:");
        workbook.close();
        
        JOptionPane.showMessageDialog(this, "Planilha lida com sucesso!", "SUCESSO", JOptionPane.INFORMATION_MESSAGE );
        atualizarLabelTotal();
        EmailForm.deletaLog();
    }
    
    
    private String getContents(Cell cell) {
        DateCell dCell=null;
        if(cell.getType() == CellType.DATE)
        {
          dCell = (DateCell)cell;
          SimpleDateFormat sdf=new SimpleDateFormat("dd-MM-yyyy");  
         
            Calendar c = Calendar.getInstance(); 
            c.setTime(dCell.getDate()); 
            c.add(Calendar.DATE, 1);

          return sdf.format(c.getTime());
        }
        return cell.getContents();
    }
    
    private void atualizarLabelTotal() {
        lblTotais.setText(enviados.size() + "/" + totalEmails);
    }
    
    private void enviarEmail() {
        
/*        
        if (naoEnviados != null && naoEnviados.size() > 0) {
            String email = naoEnviados.get(0);
            enviados.add(email);
            naoEnviados.remove(email);
            atualizarLabelTotal();
            //TODO ENVIAR EMAIL
        } else {
            JOptionPane.showMessageDialog(this, "Não há items para enviar.", "Atenção", JOptionPane.WARNING_MESSAGE);
        }
        */
        
        


    }
    
    private void enviar() {
            final String username = "william.dg88@gmail.com";
        final String password = "william1337";

        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");

        Session session = Session.getInstance(props,
        new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, password);
            }
        });

        try {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress("william.dg88@gmail.com"));
            message.setRecipients(Message.RecipientType.TO,InternetAddress.parse("william.dg88@gmail.com"));
            message.setSubject("Testing Subject");
            message.setText("Dear Mail Crawler, No spam to my email, please!");

            Transport.send(message);

            System.out.println("Done");

        } catch (MessagingException e) {
            throw new RuntimeException(e);
        }
    }
}
