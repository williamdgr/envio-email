/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.muffato.form;

import br.com.muffato.dao.Configuracao;
import br.com.muffato.dao.SQLite;
import br.com.muffato.email.JavaMailSender;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;



/**
 *
 * @author debora
 */
public class EmailForm extends javax.swing.JFrame {

    private void proximoEnvio() {
        
        if (emails != null && emails.size() >= (counter + 1)) {
            String[] row = emails.get(counter).split(";");
            txtEmail.setText(row[13]);
            txtAssunto.setText(getAssunto(row));
            txtTexto.setText(getTexto(row));
            
            lblAnexo.setText("-");
            counter++;
            atualizarCounter();
        }
        
        
    }
    
    private String getAssunto(String[] row) {
        String nomeEmpresa = SQLite.obterConfiguracao(Configuracao.NOME_EMPRESA);
        StringBuilder assunto = new StringBuilder();
        assunto.append("BOLETO PENDENTE ").append(row[6].replace("-", "/")).append(" ").append(row[3]).append(" / ").append(nomeEmpresa);
        return assunto.toString();
    }
    
    private String getTexto(String[] row) {
        String ass = SQLite.obterConfiguracao(Configuracao.ASSINATURA);
        String texto = SQLite.obterConfiguracao(Configuracao.TEXTO_EMAIL);
        return texto.replace("_RAZAO_", row[3]).replace("_CNPJ_", row[2]).replace("_NOTA_FISCAL_", row[4])
                .replace("_EMISSAO", row[5].replace("-", "/")).replace("_VCTO_", row[6].replace("-", "/")).replace("_VALOR_", row[9]).concat("\n\n").concat(ass);
    }
    
/*   
0 num linha   
1 CODIGO 227	
2 CNPJ	034163880001-02
3 RAZÃO	ZANELATTO COMERCIO D
4 NF	001154605-3
5 EMISSÃO 30-08-2019	
6 VENC	07-10-2019
7 BC	001 4 
8 Valor Original 285,11	 
9 Valor Atual 	285,11
10 Num Banco	16520081101518115
11 Atraso	44
12 TELEF	4436422090"  " 
13 EMAIL        supcasagrande@hotmailcom
*/  
    
    private List<String> emails = new ArrayList<String>();
    private List<String> naoEnviados = new ArrayList<String>();
    private List<String> enviados = new ArrayList<String>();
    private List<String> erroEnvioEmail = new ArrayList<String>();
    private Integer counter = 0;
    
    public EmailForm(List<String> emails) {
        this.emails = emails;
        initComponents();
        atualizarCounter();
        proximoEnvio();
        deletaLog();
        naoEnviados = new ArrayList<String>();
        enviados = new ArrayList<String>();
        erroEnvioEmail = new ArrayList<String>();
        
      this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
    }
    /**
     * Creates new form EmailForm
     */
    public EmailForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtAssunto = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtTexto = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lblTotais = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        lblAnexo = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Envio de Email");

        jLabel1.setText("Destinatário");

        jLabel2.setText("Assunto");

        jLabel3.setText("Conteúdo");

        txtTexto.setColumns(20);
        txtTexto.setRows(5);
        jScrollPane1.setViewportView(txtTexto);

        jButton1.setText("Pular");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Enviar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        lblTotais.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTotais.setText("0/0");

        jButton3.setText("Anexo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        lblAnexo.setText("-");

        jButton4.setText("Enviar Tudo");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAnexo)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTotais)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addContainerGap(281, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmail)
                            .addComponent(txtAssunto, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtAssunto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(lblAnexo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1)
                    .addComponent(lblTotais)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        saveLog();
        proximoEnvio();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String pathAnexo = lblAnexo.getText().equals("-") ? null : lblAnexo.getText();
        try {
            JavaMailSender.enviarEmail(txtEmail.getText(), txtAssunto.getText(), txtTexto.getText(), pathAnexo);
            lblAnexo.setText("-");
            JOptionPane.showMessageDialog(this, "Enviado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        } catch(Exception e) {
            saveLog();
            saveErroEmail(e);
            JOptionPane.showMessageDialog(this, "Erro ao enviar email!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        proximoEnvio();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void enviarTodos() {
        /*try {
            if (emails != null && emails.size() >= 1) {
                for (int i=0; i<emails.size(); i++) {
                    String[] row = emails.get(i).split(";");
                    String email  = row[13];
                    String assunto = getAssunto(row);
                    String texto = getTexto(row);

                    JavaMailSender.enviarEmail(email, assunto, texto, null);
                }
            }
        } catch(Exception e) {
            saveLog();
            saveErroEmail(e);
            JOptionPane.showMessageDialog(EmailForm.this, "Erro ao enviar email!", "ERRO", JOptionPane.ERROR_MESSAGE);
            return;
        }
        JOptionPane.showMessageDialog(EmailForm.this, "Emails enviados com sucesso!", "SUCESSO", JOptionPane.INFORMATION_MESSAGE);
        */
        
        try {
            if (emails != null && emails.size() >= 1) {
                ExecutorService executor = Executors.newFixedThreadPool(emails.size());
                for (int i=0; i<emails.size(); i++) {
                    String[] row = emails.get(i).split(";");
                    String email  = row[13];
                    String assunto = getAssunto(row);
                    String texto = getTexto(row);

                    JavaMailSender em = new JavaMailSender(email, assunto, texto);
                    executor.execute(em);
                }
                executor.shutdown();
                while (!executor.isTerminated()) {
                }
                System.out.println("Finished all threads");
            }
        } catch(Exception e) {
            saveLog();
            saveErroEmail(e);
            JOptionPane.showMessageDialog(EmailForm.this, "Erro ao enviar email!", "ERRO", JOptionPane.ERROR_MESSAGE);
            return;
        }
        JOptionPane.showMessageDialog(EmailForm.this, "Emails enviados com sucesso!", "SUCESSO", JOptionPane.INFORMATION_MESSAGE);
    }
        
     
    public void calculaTotalRecebido(){
      new Thread() {

        @Override
        public void run() {
          //Recebe aproximadamente 70mil registros. 
        }
      }.start();

    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.xls", "xls");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
           System.out.println("You chose to open this file: " + chooser.getSelectedFile().getName());
           System.out.println("You chose to open this file: " + chooser.getSelectedFile().getAbsolutePath());
           lblAnexo.setText(chooser.getSelectedFile().getAbsolutePath());
        } else {
            JOptionPane.showMessageDialog(this, "Formato de arquivo deve ser .xls", "ERRO", JOptionPane.ERROR );
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        enviarTodos();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmailForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmailForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmailForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmailForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmailForm().setVisible(true);
            }
        });
    }
    
    private void atualizarCounter() {
        lblTotais.setText(counter + "/" + emails.size());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAnexo;
    private javax.swing.JLabel lblTotais;
    private javax.swing.JTextField txtAssunto;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextArea txtTexto;
    // End of variables declaration//GEN-END:variables

    public void saveLog() {
        try {
            if (!naoEnviados.contains(emails.get(counter-1))) {
                naoEnviados.add(emails.get(counter-1));
            }
            File f = new File(getPathLog());
            if (f.exists()) {
                f.delete();
            }
            BufferedWriter writer = new BufferedWriter(new FileWriter(getPathLog(), true));
            if (naoEnviados != null && !naoEnviados.isEmpty()) {
                for (String row : naoEnviados) {
                    writer.append(row);
                }
            }
            writer.close();
        } catch(Exception ex) {
            ex.printStackTrace();
        }
   }
    
     public static void deletaLog() {
        try {
            File f = new File(EmailForm.getPathLog());
            if (f.exists()) {
                f.delete();
            }
        } catch(Exception ex) {
            ex.printStackTrace();
        }
  }
    
    public static String getPathLog() {
        File path = new File(".");
        return (path.getAbsolutePath().replace(".", "") + "log.txt");
    }
    
    public static String getPathLogEmailErro() {
        File path = new File(".");
        return (path.getAbsolutePath().replace(".", "") + "erroEmailLog.txt");
    }
    
     public void saveErroEmail(Exception e) {
        try {
            StringWriter errors = new StringWriter();
            e.printStackTrace(new PrintWriter(errors));
            erroEnvioEmail.add(errors.toString()); 

            File f = new File(getPathLogEmailErro());
            if (f.exists()) {
                f.delete();
            }
            BufferedWriter writer = new BufferedWriter(new FileWriter(getPathLogEmailErro(), true));
            if (erroEnvioEmail != null && !erroEnvioEmail.isEmpty()) {
                for (String row : erroEnvioEmail) {
                    writer.append(row);
                }
            }
            writer.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
  }
    
    
}
